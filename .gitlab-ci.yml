workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web"

stages:
  - 00-to-the-moon
  - 01-configured-test
  - 02-spin-that-car-around
  - 03-reverted-test
  - 04-back-from-the-moon

default:
  #image: cypress/browsers:$DOCKER_IMAGE_VER
  image: cypress/included:$CYPRESS_VERSION
  services:
    - name: "docker:18.09-dind"
  tags:
    - k8s

variables:
  DOCKER_HOST: "tcp://localhost:2375"
  DOCKER_API_VERSION: "1.39"
  KUBERNETES_CPU_REQUEST: "1250m"
  KUBERNETES_CPU_LIMIT: "2000m"
  KUBERNETES_MEMORY_REQUEST: "4000Mi"
  KUBERNETES_MEMORY_LIMIT: "4000Mi"
  KUBERNETES_POLL_TIMEOUT: 600

configure-solution:
  stage: 00-to-the-moon
  script:
    #get cypress ready to roll
    #- npm init -y && npm install cypress --save-dev
    #- npm ci
    # show all installed versions of Cypress binary
    #- npx cypress cache list
    # print CI environment variables for reference
    #- npx cypress verify
    #set up scripts for cypress environment configuration
    - "./.gitlab-ci/00-base-environment-creation.sh"
    #extra arg due to mem problems crashing the runner. silly Chrome :(
    - npx cypress run --spec "./cypress/integration/CIAM/02-create_ciam_env.js" --browser chrome --headless
    - npx cypress run --spec "./cypress/integration/WF/01-create_wf_env.js" --browser chrome --headless
    #perform environment configuration (all, including set, revert, create, and delete)
    - "./.gitlab-ci/01-base-environment-configuration.sh"
    - "./.gitlab-ci/02-cypress-substitution.sh"
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      #test where txt file going
      - "./cypress/"
      - "./cypress/integration/"
      - "./cypress.json"

CIAM-test-configured-state:
  stage: 01-configured-test
  script:
    #run master set test scripts for CIAM
    - npx cypress run --spec './cypress/integration/CIAM/set.js' --browser chrome --headless
  dependencies:
    - configure-solution
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - "./cypress/videos/"

WF-test-configured-state:
  stage: 01-configured-test
  script:
    #run master set test scripts for WF
    - npx cypress run --spec './cypress/integration/WF/set.js' --browser chrome --headless
  dependencies:
    - configure-solution
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - "./cypress/videos/"

revert-solution:
  stage: 02-spin-that-car-around
  script:
    #api calls to revert environment for final testing.
    - "./.gitlab-ci/03-base-environment-revert.sh"
  dependencies:
    - configure-solution

CIAM-test-reverted-state:
  stage: 03-reverted-test
  script:
    #run master revert tests scripts for CIAM
    - npx cypress run --spec './cypress/integration/CIAM/revert.js' --browser chrome --headless
  dependencies:
    - configure-solution
    - revert-solution
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - "./cypress/videos/"

WF-test-reverted-state:
  stage: 03-reverted-test
  script:
    #run master revert tests scripts for WF
    - npx cypress run --spec './cypress/integration/WF/revert.js' --browser chrome --headless
  dependencies:
    - revert-solution
    - configure-solution
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - "./cypress/videos/"

CIAM-env-cleanup:
  stage: 04-back-from-the-moon
  when: always
  script:
    #run delete environment script for CIAM
    - npx cypress run --spec "./cypress/integration/CIAM/*delete*.js" --browser chrome --headless
  dependencies:
    - configure-solution
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - "./cypress/videos/"

WF-env-cleanup:
  stage: 04-back-from-the-moon
  when: always
  script:
    #run delete environment script for WF
    - npx cypress run --spec "./cypress/integration/WF/*delete*.js" --browser chrome --headless
  dependencies:
    - configure-solution
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - "./cypress/videos/"
