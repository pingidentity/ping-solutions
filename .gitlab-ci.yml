workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web"

stages:
  - 00-get-ready-to-rumble
  - 01-to-the-moon
  - 02-almost-to-the-moon
  #- 03-explore-the-frontier
  #- 04-explore-return-idk
  - 05-back-to-earth

default:
  services:
    - name: "docker:18.09-dind"
  tags:
    - k8s

variables:
  DOCKER_HOST: "tcp://localhost:2375"
  DOCKER_API_VERSION: "1.39"
  KUBERNETES_CPU_REQUEST: "2000m"
  KUBERNETES_CPU_LIMIT: "3000m"
  KUBERNETES_MEMORY_REQUEST: "3000Mi"
  KUBERNETES_MEMORY_LIMIT: "6000Mi"
  KUBERNETES_POLL_TIMEOUT: 600

create-pipeline-environments:
  stage: 00-get-ready-to-rumble
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$ANSIBLE_DOCKER_PIPELINE_VERSION
  script: "export PLAYBOOK='00-environment-create.yml'; /ansible/entrypoint.sh"
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - /builds/solutions/thunder/.gitlab-ci/cypress/WF_cypress.json
      - /builds/solutions/thunder/.gitlab-ci/cypress/CIAM_cypress.json
      - /builds/solutions/thunder/.gitlab-ci/gitlab_var.prop
    reports:
      dotenv: /builds/solutions/thunder/.gitlab-ci/gitlab_var.prop

configure-CIAM-p1_pf_pre-environment:
  stage: 01-to-the-moon
  image: $ANSIBLE_DOCKER_DEV_IMAGE:$ANSIBLE_DOCKER_DEV_VERSION
  script: ./.gitlab-ci/ansible-pipeline/01-ciam-configure.sh
  dependencies:
    - create-pipeline-environments

configure-WF-p1_pf_pre-environment:
  stage: 01-to-the-moon
  image: $ANSIBLE_DOCKER_DEV_IMAGE:$ANSIBLE_DOCKER_DEV_VERSION
  script: ./.gitlab-ci/ansible-pipeline/01-wf-configure.sh
  dependencies:
    - create-pipeline-environments

#configure-CIAM-pf_post-environment:
#  stage: 02-almost-to-the-moon
#  image: $ANSIBLE_DOCKER_DEV_IMAGE:$ANSIBLE_DOCKER_DEV_VERSION
#  script: ./.gitlab-ci/ansible-pipeline/02-ciam-configure.sh
#  dependencies:
#    - create-pipeline-environments
#
#configure-WF-pf_post-environment:
#  stage: 02-almost-to-the-moon
#  image: $ANSIBLE_DOCKER_DEV_IMAGE:$ANSIBLE_DOCKER_DEV_VERSION
#  script: ./.gitlab-ci/ansible-pipeline/02-wf-configure.sh
#  dependencies:
#    - create-pipeline-environments

# test-configured-CIAM-environment:
#   stage: 03-explore-the-frontier
#   image: cypress/included:$CYPRESS_VERSION
#   script:
#     - mv .gitlab-ci/cypress/integration/CIAM/set cypress/integration/CIAM
#     - npx cypress run --config-file '.gitlab-ci/cypress/CIAM_cypress.json' --browser chrome --headless
#   dependencies:
#     - create-pipeline-environments
#   artifacts:
#     expire_in: 4 hours
#     when: always
#     paths:
#       - "./cypress/videos/"

# test-configured-WF-environment:
#   stage: 03-explore-the-frontier
#   image: cypress/included:$CYPRESS_VERSION
#   script:
#     - mv .gitlab-ci/cypress/integration/WF/set cypress/integration/WF
#     - npx cypress run --config-file '.gitlab-ci/cypress/WF_cypress.json' --browser chrome --headless
#   dependencies:
#     - create-pipeline-environments
#   artifacts:
#     expire_in: 4 hours
#     when: always
#     paths:
#       - "./cypress/videos/"

delete-pipeline-environments:
  stage: 05-back-to-earth
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$ANSIBLE_DOCKER_PIPELINE_VERSION
  script: "export WORKER_APP_ACCESS_TOKEN=$PIPELINE_APP_ACCESS_TOKEN; export PLAYBOOK='04-environment-delete.yml'; /ansible/entrypoint.sh"
  dependencies:
    - create-pipeline-environments
  when: always