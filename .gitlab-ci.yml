workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web"

stages:
  - 00-get-ready-to-rumble
  - 01-to-the-moon
  - 02-almost-to-the-moon
  #- 03-explore-the-frontier
  #- 04-explore-return-idk
  - 05-back-to-earth

default:
  #image: cypress/browsers:$DOCKER_IMAGE_VER
  image: cypress/included:$CYPRESS_VERSION
  services:
    - name: "docker:18.09-dind"
  tags:
    - k8s

variables:
  DOCKER_HOST: "tcp://localhost:2375"
  DOCKER_API_VERSION: "1.39"
  KUBERNETES_CPU_REQUEST: "1250m"
  KUBERNETES_CPU_LIMIT: "2000m"
  KUBERNETES_MEMORY_REQUEST: "4000Mi"
  KUBERNETES_MEMORY_LIMIT: "4000Mi"
  KUBERNETES_POLL_TIMEOUT: 600

create-pipeline-environments:
  stage: 00-get-ready-to-rumble
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$ANSIBLE_DOCKER_PIPELINE_VERSION
  script: "export PLAYBOOK='00-environment-create.yml'; /ansible/entrypoint.sh"
  artifacts:
    expire_in: 4 hours
    when: always
    paths:
      - /builds/solutions/thunder/.gitlab-ci/cypress/WF_cypress.json
      - /builds/solutions/thunder/.gitlab-ci/cypress/CIAM_cypress.json
      - /builds/solutions/thunder/.gitlab-ci/gitlab_var.prop
    reports:
      dotenv: /builds/solutions/thunder/.gitlab-ci/gitlab_var.prop

configure-CIAM-p1_pf_pre-environment:
  stage: 01-to-the-moon
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$LEGACY_DOCKER_TAG
  script: "export ENV_ID=$CIAM_ENV_ID;export PINGFED_BASE_URL=$CIAM_PINGFED_BASE_URL;bash ./.gitlab-ci/01-shell.sh"
  dependencies:
    - create-pipeline-environments

configure-WF-p1_pf_pre-environment:
  stage: 01-to-the-moon
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$LEGACY_DOCKER_TAG
  script: "export ENV_ID=$WF_ENV_ID;export PINGFED_BASE_URL=$WF_PINGFED_BASE_URL;bash ./.gitlab-ci/01-shell.sh"
  dependencies:
    - create-pipeline-environments

configure-CIAM-pf_post-environment:
  stage: 02-almost-to-the-moon
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$LEGACY_DOCKER_TAG
  script: "export ENV_ID=$CIAM_ENV_ID;export PINGFED_BASE_URL=$CIAM_PINGFED_BASE_URL;bash ./Solutions/integrations/sol_p1_pf_postconfig.sh"
  dependencies:
    - create-pipeline-environments

configure-WF-pf_post-environment:
  stage: 02-almost-to-the-moon
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$LEGACY_DOCKER_TAG
  script: "export ENV_ID=$WF_ENV_ID;export PINGFED_BASE_URL=$WF_PINGFED_BASE_URL;bash ./Solutions/integrations/sol_p1_pf_postconfig.sh"
  dependencies:
    - create-pipeline-environments

delete-pipeline-environments:
  stage: 05-back-to-earth
  image: $ANSIBLE_DOCKER_PIPELINE_IMAGE:$ANSIBLE_DOCKER_PIPELINE_VERSION
  script: "export WORKER_APP_ACCESS_TOKEN=$PIPELINE_APP_ACCESS_TOKEN; export PLAYBOOK='04-environment-delete.yml'; /ansible/entrypoint.sh"
  dependencies:
    - create-pipeline-environments
  when: always